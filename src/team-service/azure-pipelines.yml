# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- 'release/*'

jobs:
- job: run_unit_tests
  displayName: 'Run Unit Test'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  # Run domain level tests
  - task: Go@0
    inputs:
      command: 'test'
      workingDirectory: 'src/team-service/domain'
  # Run use case level tests
  - task: Go@0
    inputs:
      command: 'test'
      workingDirectory: 'src/team-service/usecases'
  # Ensure application can build
  - task: Go@0
    inputs:
      command: 'build'
      workingDirectory: 'src/team-service/'
  

- job: package_application_files
  displayName: 'Package application files'
  dependsOn: [ run_unit_tests ]
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  # Create zip file of team-service
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'src/team-service'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
      replaceExistingArchive: true
